definitions:
  model.Friend:
    properties:
      friend:
        $ref: '#/definitions/model.User'
      friend_id:
        type: integer
      id:
        type: integer
      status:
        type: string
      timestamp:
        type: string
      user:
        $ref: '#/definitions/model.User'
      user_id:
        type: integer
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      profile_picture:
        type: string
      status_message:
        type: string
      user_id:
        type: integer
      user_password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/friends:
    post:
      consumes:
      - application/json
      description: Add friends with each other
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Friend ID
        in: path
        name: friend_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a friend
      tags:
      - Friends
  /api/friends/{friend_id}:
    delete:
      consumes:
      - application/json
      description: Remove a friend by their Friend ID
      parameters:
      - description: Friend ID
        in: path
        name: friend_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a friend
      tags:
      - Friends
  /api/login:
    get:
      consumes:
      - application/json
      description: User logs in and gets token
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: userPassword
        in: body
        name: userPassword
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - Auth
  /api/register:
    post:
      consumes:
      - application/json
      description: User Registers and gets token
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: userPassword
        in: body
        name: userPassword
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: User Register
      tags:
      - Auth
  /api/users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all users
      tags:
      - Users
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Find a user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update a user's information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user
      tags:
      - Users
  /api/users/{id}/friends:
    get:
      consumes:
      - application/json
      description: Retrieve all friends of a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Friend'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user's friends
      tags:
      - Friends
  /api/users/{username}/friends:
    get:
      consumes:
      - application/json
      description: Retrieve friends of a user by their username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Friend'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Find friends by username
      tags:
      - Friends
swagger: "2.0"
